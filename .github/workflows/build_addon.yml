name: build addon

on:
  push:
    tags: ["*"]

  pull_request:
    branches: [ main, master ]

  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - run: echo -e "pre-commit\nscons\nmarkdown">requirements.txt

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install -r requirements.txt
        sudo apt-get update  -y
        sudo apt-get install -y gettext

    - name: Code checks
      run: export SKIP=no-commit-to-branch; pre-commit run --all

    - name: building addon
      run: scons

    - uses: actions/upload-artifact@v3
      with:
        name: packaged_addon
        path: ./*.nvda-addon

  upload_release:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: ["build"]
    steps:
    - uses: actions/checkout@v3

    - name: download releases files
      uses: actions/download-artifact@v3
      with:
        name: packaged_addon

    - name: Display structure of downloaded files
      run: ls -R

    - name: Prepare release body
      id: prep
      run: |
        if [ -f "changelog.md" ]; then
          BODY_CONTENT="$(<changelog.md)"
          BODY_CONTENT="${BODY_CONTENT//'%'/'%25'}"
          BODY_CONTENT="${BODY_CONTENT//$'\n'/'%0A'}"
          BODY_CONTENT="${BODY_CONTENT//$'\r'/'%0D'}"
          echo "BODY=${BODY_CONTENT}" >> $GITHUB_ENV
        else
          echo "BODY=" >> $GITHUB_ENV
        fi

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./*.nvda-addon
        fail_on_unmatched_files: true
        prerelease: ${{ contains(github.ref, '-') }}
        body: ${{ env.BODY }}
